[package]
name = "noseyparker"
authors.workspace = true
edition = "2021"
rust-version.workspace = true
repository.workspace = true
license.workspace = true
publish.workspace = true

[features]
# Enable per-rule runtime profiling, causing profile data to be dumped in a
# table to stdout after scanning.
rule_profiling = []
# Provide functionality for enumerating and interacting with GitHub.
# If this is not enabled, no GitHub functionality will be available.
github = ["dep:reqwest", "dep:tokio", "dep:secrecy", "dep:chrono"]

[dependencies]
anyhow = { version = "1.0" }
atoi = "2.0"
bstr = { version = "1", features = ["serde"] }
bstring-serde = { path = "../bstring-serde" }
chrono = { version = "0.4", default-features = false, features = ["std"], optional = true }
console = "0.16"
gix = { version = "0.73", features = ["max-performance", "serde"] }
hex = "0.4"
include_dir = { version = "0.7", features = ["glob"] }
input-enumerator = { path = "../input-enumerator" }
indoc = "2.0"
lazy_static = "1.5"
noseyparker-digest = { path = "../noseyparker-digest" }
noseyparker-rules = { path = "../noseyparker-rules" }
progress = { path = "../progress" }
regex = "1.11"
reqwest = { version = "0.12", features = ["json", "native-tls-vendored"], optional = true }
rusqlite = { version = "0.37", features = ["bundled", "backup", "serde_json"] }
schemars = { version = "0.8", features = ["smallvec"] }
secrecy = { version = "0.10.0", optional = true }
smallvec = { version = "1", features = ["const_generics", "const_new", "union"] }
serde = { version = "1.0", features = ["derive", "rc"] }
serde_json = { version = "1.0" }
thiserror = "2"
tokio = { version = "1", optional = true }
tracing = "0.1"
url = "2.5"
vectorscan-rs = { version = "0.0.5" }

[dev-dependencies]
pretty_assertions = "1.4"
test-case = "3"
