[package]
edition.workspace = true
rust-version.workspace = true
license.workspace = true
authors.workspace = true
homepage.workspace = true
repository.workspace = true
publish.workspace = true

name = "noseyparker-cli"
version.workspace = true
description = "Nosey Parker is a command-line program that finds secrets and sensitive information in textual data and Git history."

# at most 5
keywords = ["cli", "security", "scanner", "secret"]

# must match one of these list items: https://crates.io/category_slugs; at most 5
categories = ["command-line-utilities"]

build = "build.rs"

[features]
rule_profiling = ["noseyparker/rule_profiling"]

[[bin]]
name = "noseyparker"

[build-dependencies]
# Used for embedding compile-time version information into the `noseyparker` CLI
vergen = { version = "8.1", features = ["build", "cargo", "git", "gitcl", "rustc", "si"] }

[dependencies]

# anyhow = { version = "1.0", features = ["backtrace"] }   # add backtraces to errors -- not sure how expensive this is
anyhow = { version = "1.0" }
atty = "0.2"
clap = { version = "4.2", features = ["cargo", "derive", "env", "unicode", "wrap_help"] }
console = "0.15"
gix-features = { version = "0.28", features = ["fast-sha1"] }
gix = { version = "0.43", features = ["max-performance", "fast-sha1"] }
hex = "0.4"
indenter = "0.3"
# XXX Consider switching from indicatif to status_line: https://docs.rs/status-line/latest/status_line/struct.StatusLine.html
indicatif = { version = "0.17", features = ["improved_unicode", "rayon"] }
indoc = "2.0"
ignore = "0.4"
lazy_static = "1.4"
noseyparker = { path = "../noseyparker" }
prettytable-rs = "0.10"
rayon = "1.5"
regex = "1.7"
rlimit = "0.9.0"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde-sarif = "0.3.6"
tracing = "0.1"
tracing-log = "0.1"
tracing-subscriber = { version = "0.3", features = ["tracing-log", "ansi"] }
url = "2.3"
vectorscan = { path = "../vectorscan" }

[dev-dependencies]
assert_cmd = { version = "2.0", features = ["color-auto"] }
assert_fs = "1.0"
# criterion = "0.4"
# escargot = "0.5"  # NOTE: much more capable but much slower than assert_cmd for `cargo run` tests
insta = { version = "1.29", features = ["filters", "json", "redactions"] }
predicates = "2.1"
pretty_assertions = "1.3"


# NOTE: See cargo-license to list dependency licenses: https://github.com/onur/cargo-license

# Other dependencies that sounds possibly useful:
#
# aho-corasick                                  # text matching
# base64
# bytes
# bzip2                                         # compression
# clap_mangen                                   # documentation, arg parsing
# clap_complete                                 # documentation, arg parsing
# console                                       # reporting
# csv                                           # data format
# digest                                        # hashing
# dirs                                          # filesystem, configuration
# env_logger                                    # logging
# flate2                                        # compression
# handlebars                                    # templating
# infer                                         # content type guesser
# magic                                         # content type guesser
# mime                                          # content type guesser
# mime_guess                                    # content type guesser
# nom                                           # parsing
# pkg-config                                    # build-time configuration
# pretty                                        # reporting
# quickcheck                                    # testing
# tar                                           # data format
# tempfile                                      # filesystem
# termcolor                                     # reporting
# tinytemplate                                  # templating
# thiserror                                     # error handling
# toml                                          # data format, configuration
# tree_magic                                    # content type guesser
# unicode-normalization
# uuid
# xz2                                           # compression
