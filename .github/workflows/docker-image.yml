name: Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  # build single-platform docker images on native runners
  build:
    strategy:
      matrix:
        include:
        - base: debian
          platform: linux/amd64
          dockerfile: Dockerfile
          image: ghcr.io/${{ github.repository }}
          runs-on: ubuntu-22.04

        - base: debian
          platform: linux/arm64
          dockerfile: Dockerfile
          image: ghcr.io/${{ github.repository }}
          runs-on: ubuntu-22.04-arm64-8-core

        - base: alpine
          platform: linux/amd64
          dockerfile: Dockerfile.alpine
          image: ghcr.io/${{ github.repository }}-alpine
          runs-on: ubuntu-22.04

        - base: alpine
          platform: linux/arm64
          dockerfile: Dockerfile.alpine
          image: ghcr.io/${{ github.repository }}-alpine
          runs-on: ubuntu-22.04-arm64-8-core

    name: Docker (${{ matrix.platform }} ${{ matrix.base }})
    runs-on: ${{ matrix.runs-on }}

    steps:
    - uses: actions/checkout@v4

    - uses: docker/setup-buildx-action@v3

    - name: Prepare
      run: |
        platform=${{ matrix.platform }}
        # replace slashes in platform with dashes
        echo "PLATFORM_PAIR=${platform//\//-}" >> "$GITHUB_ENV"

    # We need to authenticate with GHCR both to push the image by digest
    - name: Authenticate with GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Collect Docker metadata
      id: metadata
      uses: docker/metadata-action@v5
      with:
        images: ${{ matrix.image }}

    - name: Build and push by digest
      uses: docker/build-push-action@v6
      id: build
      with:
        cache-from: type=gha,scope=${{ matrix.dockerfile }}
        cache-to: type=gha,scope=${{ matrix.dockerfile }},mode=min

        context: .

        file: ${{ matrix.dockerfile }}

        platforms: ${{ matrix.platform }}

        # don't specify 'tags' here (error "get can't push tagged ref by digest")

        labels: ${{ steps.metadata.outputs.labels }}
        # labels: |
        #   org.opencontainers.image.title=${{ github.event.repository.name }}
        #   org.opencontainers.image.description=${{ github.event.repository.description }}
        #   org.opencontainers.image.url=${{ github.event.repository.html_url }}
        #   org.opencontainers.image.source=${{ github.event.repository.clone_url }}
        #   org.opencontainers.image.revision=${{ github.sha }}
        #   org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}

        outputs: type=image,name=${{ matrix.image }},push-by-digest=true,name-canonical=true,push=true

    - name: Export digest
      run: |
        mkdir -p /tmp/digests
        digest="${{ steps.build.outputs.digest }}"
        touch "/tmp/digests/${digest#sha256:}"

    - name: Upload digest
      uses: actions/upload-artifact@v4
      with:
        name: digests-${{ matrix.base }}-${{ env.PLATFORM_PAIR }}
        path: /tmp/digests/*
        if-no-files-found: error
        retention-days: 1

  # merge single-platform images into multiplatform images
  merge:
    strategy:
      matrix:
        include:
        - base: debian
          image: ghcr.io/${{ github.repository }}

        - base: alpine
          image: ghcr.io/${{ github.repository }}-alpine


    runs-on: ubuntu-latest
    needs:
      - build

    name: Docker (${{ matrix.base }})

    steps:
    - name: Download digests
      uses: actions/download-artifact@v4
      with:
        path: /tmp/digests
        pattern: digests-${{ matrix.base }}-*
        merge-multiple: true

    - name: Set up Docker buildx
      uses: docker/setup-buildx-action@v3

    - name: Collect Docker metadata
      id: metadata
      uses: docker/metadata-action@v5
      with:
        images: ${{ matrix.image }}

    # We need to authenticate with GHCR to push
    - name: Authenticate with GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Create manifest list and push
      working-directory: /tmp/digests
      run: |
        docker buildx imagetools create \
          $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
          $(printf '${{ matrix.image }}@sha256:%s ' *)

    - name: Inspect Docker image
      run: |
        docker buildx imagetools inspect ${{ matrix.image }}:${{ steps.metadata.outputs.version }}

    - name: Test Docker image
      run: docker run --rm "${{ matrix.image }}:${{ steps.metadata.outputs.version }}" --version

    - name: Push the Docker image to `edge`
      if: github.event_name == 'push' && github.ref_name == 'main'
      run: |
        docker push "${{ matrix.image }}:edge"
